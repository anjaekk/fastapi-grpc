static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 443
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                use_remote_address: true
                stat_prefix: ingress_http
                common_http_protocol_options:
                  idle_timeout: 340s
                  max_stream_duration: 600s
                route_config:
                  name: example_route
                  virtual_hosts:
                    - name: example_host
                      domains:
                        - "www.example.com"
                      routes:
                        - match:
                            prefix: "/comment.Comments"
                          route:
                            cluster: python-server
                            prefix_rewrite: "/comment.Comments"
                        - match:
                            prefix: "/"
                          route:
                            cluster: js-client
                            prefix_rewrite: "/"
                      cors: # cors filter options
                        allow_origin_string_match:
                          - exact: https://www.example.com # must match exactly the string
                          - prefix: https://www.example2.com # must have the same prefix
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,authorization
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message
                http_filters:
                  - name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.cors
                  - name: envoy.filters.http.router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                  - certificate_chain:
                      filename: "/etc/envoy/ssl/example/fullchain.pem"
                    private_key:
                      filename: "/etc/envoy/ssl/example/privkey.pem"
                alpn_protocols: ["h2,http/1.1"]
  clusters:
    - name: js-client
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: js-client
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: js-client
                      port_value: 3000
    - name: python-client
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: python-client
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: python-client
                      port_value: 8000
    - name: python-server
      connect_timeout: 0.25s
      type: strict_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: python-server
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: python-server
                    port_value: 50051
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: "www.example.com"
          common_tls_context:
            tls_certificates:
              - certificate_chain:
                  filename: "/etc/envoy/ssl/example/fullchain.pem"
                private_key:
                  filename: "/etc/envoy/ssl/example/privkey.pem"

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901